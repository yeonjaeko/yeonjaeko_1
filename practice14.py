a = 1   # 전역


def vartest(b=1):   # 매개변수 b는 디폴트값 1, 다른 값을 입력받으면 다른 값으로 쓰입니다.
    c = b + a + 1   # 전역변수 a는 어디에서든 쓰일 수 있다
    return c


a = vartest(2)      # (전역)변수 a값에 함수의 리턴값(c) 넣어줌, 리턴이 없으면 반환값이 없으므로 함수는 실행되지만 들어가지 않음
# (전역)변수 a값은 vartest함수때문에 4가 됨
print(a)

# vartest함수때문에 4가 된 (전역)변수 a에 vartest함수의 return값 대입시킴
a = vartest(2)
print(a)


a = 1   # 전역


def vartest(b=2):   # 매개변수 b는 디폴트값 2, 다른 값을 입력받으면 b는 2가 아닌 입력받은 다른 값으로 쓰입니다.
    c = b + a + 1   # 전역변수 a(1)는 어디에서든 쓰일 수 있다, b는 매개변수로 받은 a의 값, a는 전역변수
    return c


a = vartest(a)      # (전역)변수 a값에 함수의 리턴값(c) 넣어줌, 리턴이 없으면 반환값이 없으므로 함수는 실행되지만 들어가지 않음
# (전역)변수 a값은 vartest함수때문에 3이 됨 (c = 1 + 1 + 1)
print(a)

# vartest함수때문에 3이 된 (전역)변수 a에 vartest함수의 return값 대입시킴
a = vartest()
# (c = 2 + 3 + 1)
print(a)

# 일케 전역변수값을 넣어주는것까지는 괜찮은데 함수 안에서 전역변수 값을 쓰게 되면 오류가 발생하거나 코드가 복잡해 질 수 있음
# 그래서 전역변수 (왠만하면)쓰지 말라는겁니다